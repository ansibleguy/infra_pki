---

- name: PKI | Service | Backup | Adding backup directory
  ansible.builtin.file:
    path: "{{ PKI.backup.path }}"
    state: directory
    owner: 'root'
    group: 'root'
    mode: 0700
  when: PKI.backup.enable | bool

- name: PKI | Service | Backup | Adding service & timer
  ansible.builtin.template:
    src: "templates/etc/systemd/system/backup-pki.{{ item }}.j2"
    dest: "/etc/systemd/system/{{ PKI.backup.service }}.{{ item }}"
    owner: 'root'
    group: 'root'
    mode: 0644
  when: PKI.backup.enable | bool
  loop:
    - 'service'
    - 'timer'

- name: PKI | Service | Backup | Enabling & Starting timer
  ansible.builtin.systemd:
    daemon_reload: true
    name: "{{ PKI.backup.service }}.timer"
    state: started
    enabled: true
  when: PKI.backup.enable | bool

- name: PKI | Service | Backup | Disabling & Stopping timer
  ansible.builtin.systemd:
    name: "{{ PKI.backup.service }}.timer"
    state: stopped
    enabled: false
  when: not PKI.backup.enable | bool
  register: pki_backup_disable
  failed_when:
    - pki_backup_disable.failed
    - "'does not exist' not in pki_backup_disable.msg"

- name: PKI | Service | Backup | Installing requirements
  ansible.builtin.package:
    name: 'xz-utils'
    state: present
  when: PKI.backup.enable | bool

- name: PKI | Service | CRL-Updater | Adding service & timer
  ansible.builtin.template:
    src: "templates/etc/systemd/system/pki-crl-updater.{{ item }}.j2"
    dest: "/etc/systemd/system/{{ PKI.crl_updater.service }}.{{ item }}"
    owner: 'root'
    group: 'root'
    mode: 0644
  when: PKI.crl_updater.enable | bool
  loop:
    - 'service'
    - 'timer'

- name: PKI | Service | CRL-Updater | Enabling & Starting timer
  ansible.builtin.systemd:
    daemon_reload: true
    name: "{{ PKI.crl_updater.service }}.timer"
    state: started
    enabled: true
  when: PKI.crl_updater.enable | bool

- name: PKI | Service | CRL-Updater | Disabling & Stopping timer
  ansible.builtin.systemd:
    name: "{{ PKI.crl_updater.service }}.timer"
    state: stopped
    enabled: false
  when: not PKI.crl_updater.enable | bool
  register: pki_crlupdater_disable
  failed_when:
    - pki_crlupdater_disable.failed
    - "'does not exist' not in pki_crlupdater_disable.msg"
