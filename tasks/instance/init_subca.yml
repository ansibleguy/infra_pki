---

- name: "{{ task_prefix_subca }} | Init-SubCA | Checking if CA-key is available"
  ansible.builtin.stat:
    path: "{{ pki_path_ca }}/private/ca.key"
  register: pki_subca_cakey

- name: "{{ task_prefix_subca }} | Init-SubCA | Fail if CA-key is not available"
  ansible.builtin.fail:
    msg: "The CA-key '{{ pki_path_ca }}/private/ca.key' could not be found!
    It is needed to initialize a new Sub-CA!"
  when: not pki_subca_cakey.stat.exists

- name: "{{ task_prefix_subca }} | Init-SubCA | Getting CA password"
  ansible.builtin.include_tasks: instance/pwd_ca.yml
  when: not pki_ca_pwd | default('') | meets_password_complexity(PKI_HC)

- name: "{{ task_prefix_subca }} | Init-SubCA | Adding directory"
  ansible.builtin.file:
    path: "{{ pki_path_subca }}"
    state: directory
    owner: "{{ pki_cnf.owner }}"
    group: "{{ pki_cnf.group_read }}"
    mode: "{{ PKI_HC.mode.dir }}"

- name: "{{ task_prefix_subca }} | Init-SubCA | Copying from template"
  ansible.builtin.copy:
    src: "{{ PKI_TMPL }}/"
    remote_src: true
    dest: "{{ pki_path_subca }}/"
    owner: "{{ pki_cnf.owner }}"
    group: "{{ pki_cnf.group }}"
    mode: "{{ PKI_HC.mode.file }}"
    directory_mode: "{{ PKI_HC.mode.dir }}"

- name: "{{ task_prefix_subca }} | Init-SubCA | Copying config"
  ansible.builtin.template:
    src: 'templates/var/local/lib/pki/instance/vars.j2'
    dest: "{{ pki_path_subca }}/vars"
    mode: "{{ PKI_HC.mode.file }}"
    owner: "{{ pki_cnf.owner }}"
    group: "{{ pki_cnf.group }}"
  vars:
    easyrsa_vars: "{{ pki_vars_subca }}"
    easyrsa_base: "{{ pki_path_subca }}"

- name: "{{ task_prefix_subca }} | Init-SubCA | Initializing"
  ansible.builtin.command: "{{ PKI_SCRIPT }} {{ pki_vars_param }} init-pki soft"
  changed_when: false
  environment:
    EASYRSA_PKI: "{{ pki_path_subca }}"

- name: "{{ task_prefix_subca }} | Init-SubCA | Generating SubCA"
  ansible.builtin.command: "{{ PKI_SCRIPT }} {{ pki_vars_param }} build-ca subca"
  changed_when: false
  environment:
    EASYRSA_PKI: "{{ pki_path_subca }}"
    EASYRSA_REQ_CN: "{{ pki_cnf_subca.ca_cn }}"
    EASYRSA_PASSIN: "pass:{{ pki_subca_pwd }}"
    EASYRSA_PASSOUT: "pass:{{ pki_subca_pwd }}"
  no_log: true
  ignore_errors: true
  register: pki_subca_result

- name: "{{ task_prefix_pki }} | Init-SubCA | Debug info"
  ansible.builtin.debug:
    var: pki_subca_result.stdout_lines
  when: debug | bool

- name: "{{ task_prefix_pki }} | Init-SubCA | Show pretty error"
  ansible.builtin.fail:
    msg: "It seems the Sub-CA creation failed. Please analyze the output to resolve the issue!
    STDERR: '{{ pki_subca_result.stderr_lines | default(pki_subca_result.msg) }}'"
  when: pki_subca_result.failed

- name: "{{ task_prefix_subca }} | Init-SubCA | Importing SubCA request into CA"
  ansible.builtin.command: "{{ PKI_SCRIPT }} {{ pki_vars_param }}
  import-req {{ pki_path_subca }}/reqs/ca.req subca_{{ pki_name_subca }}"
  vars:
    pki_vars_param: "--vars={{ pki_path_ca }}/vars --batch"
  environment:
    EASYRSA_PKI: "{{ pki_path_ca }}"
  args:
    creates: "{{ pki_path_ca }}/reqs/subca_{{ pki_name_subca }}.req"

- name: "{{ task_prefix_subca }} | Init-SubCA | Signing SubCA via CA"
  ansible.builtin.command: "{{ PKI_SCRIPT }} {{ pki_vars_param }} --no-text sign-req ca subca_{{ pki_name_subca }}"
  vars:
    pki_vars_param: "--vars={{ pki_path_ca }}/vars --batch"
  environment:
    EASYRSA_PKI: "{{ pki_path_ca }}"
    EASYRSA_PASSIN: "pass:{{ pki_ca_pwd }}"
  args:
    creates: "{{ pki_path_ca }}/issued/subca_{{ pki_name_subca }}.crt"
  no_log: true

- name: "{{ task_prefix_subca }} | Init-SubCA | Copying signed SubCA certificate"
  ansible.builtin.copy:
    src: "{{ pki_path_ca }}/issued/subca_{{ pki_name_subca }}.crt"
    remote_src: true
    dest: "{{ pki_path_subca }}/{{ PKI_HC.file.ca }}"
    mode: "{{ PKI.mode_public }}"
    owner: "{{ pki_cnf.owner }}"
    group: "{{ pki_cnf.group_read }}"

- name: "{{ task_prefix_subca }} | Init-SubCA | Saving password"
  ansible.builtin.copy:
    dest: "{{ pki_path_subca }}/{{ PKI_HC.file.pwd_ca }}"
    content: "{{ pki_subca_pwd }}"
    mode: 0400  # if someone is already root - all hope is lost anyway
    owner: 'root'
    group: 'root'
  no_log: true
  when: PKI.save_passwords | bool

- name: "{{ task_prefix_subca }} | Init-SubCA | Saving certificate password"
  ansible.builtin.copy:
    dest: "{{ pki_path_subca }}/{{ PKI_HC.file.pwd_cert }}"
    content: "{{ pki_cnf_subca.pwd_cert }}"
    mode: 0400  # if someone is already root - all hope is lost anyway
    owner: 'root'
    group: 'root'
  no_log: true
  when:
    - PKI.save_passwords | bool
    - pki_cnf_subca.pwd_cert is defined
    - pki_cnf_subca.pwd_cert | meets_password_complexity(PKI_HC)

- name: "{{ task_prefix_subca }} | Init-SubCA | Generating CRL"
  ansible.builtin.include_tasks: instance/update_crl.yml
  vars:
    easyrsa_base: "{{ pki_path_subca }}"
    easyrsa_ca_pwd: "{{ pki_subca_pwd }}"
    crl_task_prefix: "{{ task_prefix_subca }}"

- name: "{{ task_prefix_subca }} | Init-SubCA | Updating privileges"
  ansible.builtin.include_tasks: instance/update_privileges.yml
  vars:
    easyrsa_base: "{{ pki_path_subca }}"
    privilege_task_prefix: "{{ task_prefix_subca }}"
  tags: [always]
  args:
    apply:
      tags: [always]
