---

- name: "{{ task_prefix_pki }} | PWD-SubCA | Checking if CA-key is available"
  ansible.builtin.stat:
    path: "{{ pki_path_subca }}/{{ PKI_HC.file.pwd }}"
  register: pki_subca_pwd_file
  when: PKI.save_passwords | bool

- name: "{{ task_prefix_pki }} | PWD-SubCA | Retrieving CA-password from file"
  ansible.builtin.command: "cat {{ pki_path_subca }}/{{ PKI_HC.file.pwd }}"
  register: pki_subca_pwd_file_raw
  when:
    - PKI.save_passwords | bool
    - pki_subca_pwd_file.stat.exists

- name: "{{ task_prefix_pki }} | PWD-SubCA | Setting CA-password to saved one"
  ansible.builtin.set_fact:
    pki_subca_pwd: "{{ pki_subca_pwd_file_raw.stdout }}"
  when:
    - PKI.save_passwords | bool
    - pki_subca_pwd_file.stat.exists

- name: "{{ task_prefix_subca }} | PWD-SubCA | Checking if SubCA-password was provided"
  ansible.builtin.set_fact:
    pki_subca_pwd: "{{ pki_subca_cnf.pwd }}"
  when: "pki_cnf.pwd not in [none, '', ' ']"

- name: "{{ task_prefix_subca }} | PWD-SubCA | Prompting for SubCA-password"
  ansible.builtin.pause:
    prompt: "No CA password was provided! Please input one! MAKE SURE TO SAVE THIS PASSWORD!!"
    echo: false
  register: pki_subca_pwd_raw
  when: pki_subca_pwd is undefined
  delegate_to: localhost

- name: "{{ task_prefix_subca }} | PWD-SubCA | Setting CA-password to user-input"
  ansible.builtin.set_fact:
    pki_subca_pwd: "{{ hostvars['localhost'].pki_subca_pwd_raw.user_input }}"
  when: pki_subca_pwd is undefined
