---

- name: Converge
  hosts: test-ag-infra_pki-1
  module_defaults:
    ansible.builtin.setup:
      gather_subset: ['date_time']
  gather_facts: true
  vars:
    pki:
      save_passwords: true
      crl_distribution:
        domain: 'crl.ansibleguy.net'

      vars:
        req_country: 'AT'
        req_province: 'Styria'
        req_org: 'AnsibleGuy'
        req_email: 'pki@ansibleguy.net'
        ca_expire: 9125  # 25 years

      backup:
        enable: true

      instances:
        test1:
          ca_cn: 'TestRootCA'
          pwd_ca: 'tesT12345'
          vars:
            req_org: 'Ultra Company'
            req_ou: 'IT'
            algo: 'ec'
            curve: 'secp384r1'

          sub_cas:
            sub1:
              ca_cn: 'TestSubCA1'
              pwd_ca: 'tEst54321'
              pwd_cert: 'teSt32521'
              vars:
                req_org: 'Internal Org'
                req_city: 'Graz'

              certs:
                server:
                  ansibleguy_net:
                    cn: 'AnsibleGuy Website'
                    export:
                      unencrypted: true
                      p12: true
                    san:
                      dns: ['www.ansibleguy.net', 'ansibleguy.net']
                      ip: '135.181.170.217'
                      uri: 'https://www.ansibleguy.net'

                  test2:
                  # state: 'renewed'  # working on first run; but failing idempotence

                client:
                  wkst1:
                    cn: 'Workstation 1'
                  test2:
                    state: 'absent'

                email:
                  guy:
                    cn: 'AnsibleGuy Mail'
                    san:
                      email: 'guy@ansibleguy.net'
                    req:
                      org: 'AnsibleGuy Mailing'
                      email: 'random@ansibleguy.net'

            sub2:
              pwd_ca: 'tEst543212'
              pwd_cert: 'teSt325212'
              vars:
                req_org: 'test2org'
                req_ou: 'test2ou'
                req_email: 'test2email@test.intern'
                req_country: 'DE'
                req_province: 'test2province'
              export:
                unencrypted: true

              certs:
                server:
                  random1:
                    cn: 'Random server'
                    export:
                      unencrypted: false
                      chain: true
                      # pkcs1: true  # failing..
                      pkcs7: true
                      pkcs8: true
                      pkcs12: true

                    san:
                      dns: ['random.ansible.net']

                serverClient:
                  random2:
                    cn: 'ServerClientTest'
                    export:
                      chain: false
                      pkcs12: false

        test2:
          pwd_ca: 'tesT12345'
          owner: 'pki2'
          group: 'pki2'
          group_read: 'pki_read2'
          vars:
            req_org: 'test.org'
            req_ou: 'test.ou'
            algo: 'rsa'
            key_size: 8192
            dn: 'cn_only'

          sub_cas:
            sub1:

  roles:
    - ansibleguy.infra_pki

- name: Converge Single Certificate
  hosts: test-ag-infra_pki-1
  become: true
  module_defaults:
    ansible.builtin.setup:
      gather_subset: ['date_time']
  gather_facts: true
  vars:
    # debug: true
    pki:
      save_passwords: true
      crl_distribution:
        domain: 'crl.ansibleguy.net'

      instances:
        test1:
          ca_cn: 'TestRootCA'
          pwd_ca: 'tesT12345'
          vars:
            req_org: 'test.org'
            req_ou: 'test.ou'
            algo: 'ec'
            curve: 'secp384r1'

          sub_cas:
            sub1:
              ca_cn: 'TestSubCA1'
              pwd_ca: 'tEst54321'
              pwd_cert: 'teSt32521'
              vars:
                req_org: 'test1org'

    pki_name: 'test1'
    pki_name_subca: 'sub1'
    pki_cert_name: 'single'
    pki_cert_type: 'server'
    pki_cert_cnf:
      cn: 'Single Certificate'
      export:
        unencrypted: true
        chain: true
        pkcs12: true
      san:
        ip: ['192.168.0.1']
        dns: ['single.test']

  tasks:
    - name: PKI | Creating single certificate
      ansible.builtin.import_role:
        name: ansibleguy.infra_pki
        tasks_from: single_cert.yml
      vars:
        pki_cert_action: 'create'
        pki_subca_pwd: 'none'

    - name: PKI | Renewing single certificate
      ansible.builtin.import_role:
        name: ansibleguy.infra_pki
        tasks_from: single_cert.yml
      vars:
        pki_cert_action: 'renew'
        pki_subca_pwd: 'none'
      tags: [molecule-idempotence-notest]

    - name: PKI | Revoking single certificate
      ansible.builtin.import_role:
        name: ansibleguy.infra_pki
        tasks_from: single_cert.yml
      vars:
        pki_cert_action: 'revoke'
        pki_subca_pwd: 'none'
      tags: [molecule-idempotence-notest]

    - name: PKI | Renewing single certificate (does not yet exist)
      ansible.builtin.import_role:
        name: ansibleguy.infra_pki
        tasks_from: single_cert.yml
      vars:
        pki_cert_action: 'renew'
        pki_subca_pwd: 'none'
      tags: [molecule-idempotence-notest]
